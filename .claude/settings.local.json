{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(uv:*)",
      "Bash(cp:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__ide__getDiagnostics",
      "mcp__ide__executeCode",
      "Bash(timeout 30s npm install *)",
      "Bash(timeout 30s npm ci *)",
      "Bash(timeout 30s npm update *)",
      "Bash(timeout 30s npm audit *)",
      "Bash(timeout 30s npm list *)",
      "Bash(timeout 30s npm cache *)",
      "Bash(timeout 30s npm config *)",
      "Bash(timeout 30s npm run *)",
      "Bash(timeout 30s npm start *)",
      "Bash(timeout 30s npm test *)",
      "Bash(timeout 30s npm run build)",
      "Bash(timeout 120s npm run build --production)",
      "Bash(timeout 30s npm run dev)",
      "Bash(timeout 30s npm run start)",
      "Bash(timeout 30s npm run lint)",
      "Bash(timeout 30s npm run typecheck)",
      "Bash(timeout 30s npm run generate:ticker-manifest)",
      "Bash(timeout 30s npm run genkit:dev)",
      "Bash(timeout 30s npm run genkit:watch)",
      "Bash(timeout 30s npx *)",
      "Bash(timeout 30s yarn *)",
      "Bash(timeout 30s pnpm *)",
      "Bash(timeout 30s next dev *)",
      "Bash(timeout 120s next build *)",
      "Bash(timeout 60s next build --profile)",
      "Bash(timeout 30s next start *)",
      "Bash(timeout 30s next dev --turbopack -p 9002)",
      "Bash(timeout 30s next dev --turbopack -p 9003)",
      "Bash(timeout 30s next dev --turbopack -p 9004)",
      "Bash(timeout 30s tsc *)",
      "Bash(timeout 30s tsc --build *)",
      "Bash(timeout 30s tsc --incremental *)",
      "Bash(timeout 30s tsc --watch *)",
      "Bash(timeout 30s tsx *)",
      "Bash(timeout 30s eslint *)",
      "Bash(timeout 30s tailwindcss *)",
      "Bash(timeout 30s genkit *)",
      "Bash(timeout 60s genkit deploy *)",
      "Bash(timeout 30s genkit flow:*)",
      "Bash(timeout 30s genkit start -p 3400 *)",
      "Bash(timeout 30s genkit start -p 3401 *)",
      "Bash(timeout 30s git add *)",
      "Bash(timeout 30s git commit *)",
      "Bash(timeout 30s git push *)",
      "Bash(timeout 30s git pull *)",
      "Bash(timeout 30s git status *)",
      "Bash(timeout 30s git diff *)",
      "Bash(timeout 30s git log *)",
      "Bash(timeout 30s git branch *)",
      "Bash(timeout 30s git checkout *)",
      "Bash(timeout 30s git merge *)",
      "Bash(timeout 30s git config *)",
      "Bash(timeout 30s git rm *)",
      "Bash(timeout 30s git *)",
      "Bash(timeout 60s ps *)",
      "Bash(timeout 60s ps aux *)",
      "Bash(timeout 30s kill *)",
      "Bash(timeout 30s kill -9 *)",
      "Bash(timeout 30s pkill *)",
      "Bash(timeout 30s pgrep *)",
      "Bash(timeout 30s pidof *)",
      "Bash(timeout 30s fuser *)",
      "Bash(timeout 30s lsof *)",
      "Bash(timeout 30s top *)",
      "Bash(timeout 30s htop *)",
      "Bash(timeout 30s find *)",
      "Bash(timeout 30s grep *)",
      "Bash(timeout 30s ls *)",
      "Bash(timeout 30s cat *)",
      "Bash(timeout 30s head *)",
      "Bash(timeout 30s tail *)",
      "Bash(timeout 30s wc *)",
      "Bash(timeout 30s sort *)",
      "Bash(timeout 30s uniq *)",
      "Bash(timeout 30s awk *)",
      "Bash(timeout 30s sed *)",
      "Bash(timeout 30s mkdir *)",
      "Bash(timeout 30s cp *)",
      "Bash(timeout 30s mv *)",
      "Bash(timeout 30s rm *)",
      "Bash(timeout 30s chmod *)",
      "Bash(timeout 30s chown *)",
      "Bash(timeout 30s touch *)",
      "Bash(timeout 30s curl *)",
      "Bash(timeout 30s wget *)",
      "Bash(timeout 30s python *)",
      "Bash(timeout 30s python3 *)",
      "Bash(timeout 30s node *)",
      "Bash(timeout 30s pip *)",
      "Bash(timeout 30s pip3 *)",
      "Bash(timeout 30s echo *)",
      "Bash(timeout 30s printf *)",
      "Bash(timeout 30s date *)",
      "Bash(timeout 30s which *)",
      "Bash(timeout 30s whereis *)",
      "Bash(timeout 30s whoami *)",
      "Bash(timeout 30s pwd *)",
      "Bash(timeout 30s df *)",
      "Bash(timeout 30s du *)",
      "Bash(timeout 30s free *)",
      "Bash(timeout 30s export *)",
      "Bash(timeout 30s env *)",
      "Bash(timeout 30s printenv *)",
      "Bash(timeout 30s npm run test *)",
      "Bash(for *)",
      "Bash(while *)",
      "Bash(if *)",
      "Bash(do *)",
      "Bash(done *)",
      "Bash(then *)",
      "Bash(else *)",
      "Bash(fi *)",
      "Bash(/dev/null)",
      "Bash(true)",
      "Bash(false)",
      "Bash(/init)",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(npm ci:*)",
      "Bash(git add:*)",
      "Bash(ls:*)",
      "Bash(git commit:*)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "Bash(ss:*)",
      "Bash(timeout 30s *)",
      "Bash(grep:*)",
      "Bash(npx tsc:*)",
      "Bash(npx typescript:*)",
      "Bash(mkdir:*)",
      "Bash(awk:*)",
      "Bash(npx eslint:*)",
      "Bash(npm run lint:*)",
      "Bash(pkill:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(node:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(npm install:*)",
      "Bash(time npm run build)",
      "WebFetch(domain:www.telerik.com)",
      "WebFetch(domain:solace.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:hackernoon.com)",
      "WebFetch(domain:nextjs.org)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:microservices.io)",
      "WebFetch(domain:martinfowler.com)",
      "WebFetch(domain:research.google.com)",
      "WebFetch(domain:stately.ai)",
      "Bash(tsx:*)",
      "Bash(tsc:*)",
      "Bash(next dev:*)",
      "Bash(git checkout:*)",
      "Bash(npx @context7/cli search:*)",
      "Bash(npm view:*)",
      "Bash(npm search:*)",
      "Bash(npm ls:*)",
      "Bash(npx tsc*)",
      "Bash(npx *)",
      "Bash(timeout *)",
      "Bash(timeout 60 npx tsc:*)",
      "Bash(timeout 30 npx tsc --noEmit)",
      "Bash(npx next build:*)",
      "Bash(timeout:*)",
      "Bash(npm run type-check:*)",
      "Bash(kill:*)",
      "Bash(echo $?)",
      "Bash(echo:*)",
      "Bash(npm run:*)",
      "Bash(npm --version)",
      "Bash(SKIP_ENV_VALIDATION=true npm run build)",
      "WebSearch",
      "Bash(python:*)",
      "Bash(timeout:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(env)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Bash(chmod:*)",
      "Bash(markdownlint:*)",
      "Bash(pip install:*)",
      "WebFetch(domain:gradio.app)",
      "WebFetch(domain:www.gradio.app)",
      "mcp__filesystem__list_allowed_directories",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__read_text_file"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/home/anthony/.claude"
    ]
  }
}