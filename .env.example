# Market Parser Environment Configuration
# Copy this file to .env and fill in your actual API keys
# NEVER commit the actual .env file to version control

# Required API Keys
POLYGON_API_KEY=your_polygon_api_key_here
OPENAI_API_KEY=your_openai_api_key_here

# Optional API Keys
GEMINI_API_KEY=your_gemini_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Cost Tracking Configuration (Optional)
# Pricing in USD per 1M tokens
OPENAI_GPT5_NANO_INPUT_PRICE_PER_1M=0.05
OPENAI_GPT5_NANO_OUTPUT_PRICE_PER_1M=0.40
OPENAI_GPT5_MINI_INPUT_PRICE_PER_1M=0.25
OPENAI_GPT5_MINI_OUTPUT_PRICE_PER_1M=2.00

# Development Configuration
# OPENAI_MODEL=gpt-5-mini  # Override default model if needed
# LOG_LEVEL=INFO           # Override logging level if needed

# MCP Server Configuration (Claude Code)
CONTEXT7_API_KEY=your_context7_api_key_here
GITHUB_PAT=your_github_personal_access_token_here

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 🚀 SERVER CONFIGURATION - HARD-CODED (NO ENVIRONMENT VARIABLES NEEDED)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# The following environment variables are NO LONGER USED as of the hard-coded port migration.
# Server configuration is now static and defined directly in the application code:
#
# Backend Server: 127.0.0.1:8000 (hard-coded in src/backend/main.py)
# Frontend Server: 127.0.0.1:3000 (hard-coded in vite.config.ts)
#
# DEPRECATED (DO NOT USE):
# FASTAPI_HOST=0.0.0.0        # Now hard-coded to 127.0.0.1
# FASTAPI_PORT=8000           # Now hard-coded to 8000
# VITE_API_URL=http://localhost:8000  # Now hard-coded to http://127.0.0.1:8000

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 🎯 QUICK START - ONE-CLICK APPLICATION STARTUP
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Use the one-click startup script to launch the entire application:
# npm run start:app
#
# This script will:
# 1. Clean up any existing development servers
# 2. Start backend server at 127.0.0.1:8000
# 3. Start frontend server at 127.0.0.1:3000
# 4. Verify both servers are running
# 5. Open the application in your browser