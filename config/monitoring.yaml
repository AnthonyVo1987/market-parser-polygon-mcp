# Dynamic Adaptive Prompting System - Monitoring Configuration

# Monitoring settings
monitoring:
  enabled: true
  interval: 30  # seconds between metric collections
  health_check_interval: 60  # seconds between health checks
  metrics_retention_hours: 24
  log_level: INFO

# Service endpoints
services:
  backend:
    url: http://localhost:8000/health
    timeout: 10
    expected_status: 200
  
  frontend:
    url: http://localhost:3000
    timeout: 10
    expected_status: 200
  
  dynamic_prompting:
    url: http://localhost:8000/api/dynamic-prompting/health
    timeout: 5
    expected_status: 200

# Alert thresholds
thresholds:
  # System thresholds
  cpu_percent: 80
  memory_percent: 85
  disk_percent: 90
  load_average: 2.0
  
  # Service thresholds
  response_time_ms: 1000
  error_rate_percent: 5
  availability_percent: 99
  
  # Dynamic prompting thresholds
  prompt_generation_time_ms: 100
  cache_hit_rate_percent: 70
  validation_error_rate_percent: 1

# Alert configuration
alerts:
  enabled: true
  
  # Email alerts
  email:
    enabled: false
    smtp_server: smtp.gmail.com
    smtp_port: 587
    username: ""
    password: ""
    recipients:
      - admin@example.com
      - devops@example.com
    subject_prefix: "[Dynamic Prompting Alert]"
  
  # Slack alerts
  slack:
    enabled: false
    webhook_url: ""
    channel: "#alerts"
    username: "Dynamic Prompting Monitor"
    icon_emoji: ":robot_face:"
  
  # Webhook alerts
  webhook:
    enabled: false
    url: ""
    timeout: 10
    retry_attempts: 3
  
  # Alert levels and their configurations
  levels:
    info:
      enabled: true
      channels: ["log"]
    warning:
      enabled: true
      channels: ["log", "email"]
    critical:
      enabled: true
      channels: ["log", "email", "slack", "webhook"]

# Metrics collection
metrics:
  # System metrics
  system:
    enabled: true
    cpu: true
    memory: true
    disk: true
    network: true
    processes: true
  
  # Application metrics
  application:
    enabled: true
    response_times: true
    error_rates: true
    throughput: true
    custom_metrics: true
  
  # Dynamic prompting metrics
  dynamic_prompting:
    enabled: true
    prompt_generation_time: true
    cache_performance: true
    validation_errors: true
    user_preferences: true
    template_usage: true

# Logging configuration
logging:
  enabled: true
  level: INFO
  file: logs/monitoring.log
  max_size_mb: 100
  backup_count: 5
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # Structured logging
  structured: true
  json_format: false

# Performance monitoring
performance:
  enabled: true
  
  # Profiling
  profiling:
    enabled: false
    interval: 300  # seconds
    duration: 60  # seconds
    output_dir: logs/profiles
  
  # Memory profiling
  memory_profiling:
    enabled: false
    interval: 600  # seconds
    output_dir: logs/memory
  
  # Database monitoring (if applicable)
  database:
    enabled: false
    connection_pool_size: 10
    query_timeout: 30
    slow_query_threshold: 1000  # ms

# Health checks
health_checks:
  enabled: true
  
  # Basic health checks
  basic:
    enabled: true
    interval: 30
    timeout: 10
  
  # Advanced health checks
  advanced:
    enabled: true
    interval: 60
    timeout: 30
    checks:
      - name: "dynamic_prompting_functionality"
        description: "Test dynamic prompting functionality"
        timeout: 10
      - name: "cache_performance"
        description: "Test cache performance"
        timeout: 5
      - name: "security_validation"
        description: "Test security validation"
        timeout: 5

# Dashboard configuration
dashboard:
  enabled: false
  port: 8080
  host: localhost
  refresh_interval: 30
  
  # Metrics to display
  metrics:
    - "system.cpu_percent"
    - "system.memory_percent"
    - "services.backend.response_time_ms"
    - "dynamic_prompting.response_time_ms"
    - "dynamic_prompting.cache_hit_rate"

# External monitoring integration
external:
  # Prometheus integration
  prometheus:
    enabled: false
    port: 9090
    path: /metrics
  
  # Grafana integration
  grafana:
    enabled: false
    url: ""
    api_key: ""
    dashboard_id: ""
  
  # DataDog integration
  datadog:
    enabled: false
    api_key: ""
    app_key: ""
    tags:
      - "service:dynamic-prompting"
      - "environment:production"

# Notification templates
notification_templates:
  email:
    subject: "[{level}] {service} Alert: {message}"
    body: |
      Alert Details:
      - Level: {level}
      - Service: {service}
      - Message: {message}
      - Time: {timestamp}
      - Value: {value}
      - Threshold: {threshold}
  
  slack:
    text: "ðŸš¨ *{level.upper()}*: {message}"
    attachments:
      - color: "{color}"
        fields:
          - title: "Service"
            value: "{service}"
            short: true
          - title: "Time"
            value: "{timestamp}"
            short: true
          - title: "Value"
            value: "{value}"
            short: true
          - title: "Threshold"
            value: "{threshold}"
            short: true

# Environment-specific overrides
environments:
  development:
    monitoring:
      interval: 60
      health_check_interval: 120
    thresholds:
      cpu_percent: 90
      memory_percent: 95
    alerts:
      enabled: false
  
  staging:
    monitoring:
      interval: 30
      health_check_interval: 60
    thresholds:
      cpu_percent: 85
      memory_percent: 90
    alerts:
      enabled: true
      email:
        enabled: true
        recipients:
          - staging@example.com
  
  production:
    monitoring:
      interval: 15
      health_check_interval: 30
    thresholds:
      cpu_percent: 80
      memory_percent: 85
    alerts:
      enabled: true
      email:
        enabled: true
        recipients:
          - admin@example.com
          - devops@example.com
      slack:
        enabled: true
      webhook:
        enabled: true
